let Router,SlotService;_b15‍.x([["default",()=>_b15‍.o]]);_b15‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_b15‍.w("../services/slot.service",[["default",["SlotService"],function(v){SlotService=v}]]);


const SlotRouter = Router()
    .get('/', async (req, res, next) => {
        const rows = await new SlotService().getAllSlot()
        res.json(rows)
    })
    .post('/', async (req, res, next) => {
        const slot = { ...req.body }
        const rows = await new SlotService().createSlot(slot)
        if (rows) {
            res.json(rows)
        } else {
            res.json({ message: 'null' })
        }
    })
    .get('/id', async (req, res, next) => {
        const rows = await new SlotService().getSlotById(Number(req.query.id))
        res.json(rows)
    })
    .post('/update', async (req, res, next) => {
        const slot = { ...req.body }
        const rows = await new SlotService().updateSlot(slot)
        if (rows) {
            res.json(rows)
        } else {
            res.json({ message: 'null' })
        }
    })

_b15‍.d(SlotRouter);